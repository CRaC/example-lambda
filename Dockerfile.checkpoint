FROM fedora as builder

RUN dnf -y update && \
	dnf -y install lz4 && \
	dnf clean all

COPY jdk /jdk

RUN LIBJVM=/jdk/lib/server/libjvm.so; \
	       lz4 -f -z -9 $LIBJVM $LIBJVM.lz4; \
	       rm -f $LIBJVM; \
	       ln -s /tmp/sub/$LIBJVM $LIBJVM


FROM fedora

RUN dnf -y update && \
	dnf -y install lz4 && \
	dnf clean all

COPY --from=builder /jdk /jdk
COPY prepare-jdk.cmd.sh /

# Copy function code and runtime dependencies from Maven layout
COPY target/classes /function
COPY target/dependency/* /function/lib/

RUN /prepare-jdk.cmd.sh ; \
	cd /function/lib; /jdk/bin/jar -x -f aws-lambda-java-runtime-interface-client*.jar \
		aws-lambda-runtime-interface-client.musl.so \
		aws-lambda-runtime-interface-client.glibc.so

WORKDIR /function

ENV AWS_XRAY_CONTEXT_MISSING=LOG_ERROR

COPY checkpoint.cmd.sh /
ENTRYPOINT [ "/bin/bash", "/checkpoint.cmd.sh" ]

# Set the CMD to your handler (could also be done as a parameter override outside of the Dockerfile)
CMD [ "example.Handler::handleRequest" ]
